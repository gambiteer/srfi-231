(define srfi-names
  (with-input-from-file "srfi-231.scm"
    (lambda ()
      (let loop ((obj (read)))
        (if (not (and (list? obj)
                      (not (null? obj))
                      (eq? (car obj)
                           'with-output-to-file)))
            (loop (read))
            (let ((result '()))
              (define (process obj)
                (if (list? obj)
                    (cond ((and (not (null? obj))
                                (eq? (car obj)
                                     'format-lambda-list))
                           (set! result (cons (if (= (length obj) 3)
                                                  (cadr (caddr obj))
                                                  (car (cadadr obj)))
                                              result)))
                          ((and (not (null? obj))
                                (eq? (car obj)
                                     'format-global-variable))
                           (set! result (cons (cadadr obj) result)))
                          ((and (not (null? obj))
                                (eq? (car obj)
                                     'format-parameter))
                           (set! result (cons (cadadr obj) result)))
                          ((and (not (null? obj))
                                (memq (car obj) '(<a> <br>))
                                (memq id: obj))
                           => (lambda (tail)
                                (let ((name (cadr tail)))
                                  (set! result
                                        (cons (if (string? name)
                                                  (string->symbol name)
                                                  (if (list? name)
                                                      (cadr name) ;; quote
                                                      name))
                                              result)))))
                          (else
                           (for-each process obj)))))
              (process obj)
              result))))))

(define links
  (with-input-from-file "srfi-231.scm"
    (lambda ()
      (let loop ((obj (read)))
        (if (not (and (list? obj)
                      (not (null? obj))
                      (eq? (car obj)
                           'with-output-to-file)))
            (loop (read))
            (let ((result '()))
              (define (process obj)
                (if (list? obj)
                    (cond ((and (not (null? obj))
                                (eq? (car obj) '<a>)
                                (memq href: obj))
                           => (lambda (tail)
                                (let ((name (cadr tail)))
                                  (if (and (string? name)
                                           (positive? (string-length name))
                                           (eqv? (string-ref name 0) #\#))
                                      (set! result (cons (substring name 1 (string-length name))
                                                         result))))))
                          (else
                           (for-each process obj)))))
              (process obj)
              (map string->symbol result)))))))

(define (in-a-not-in-b a b)
  (do  ((a a (cdr a))
        (result '() (if (memq (car a) b)
                        result
                        (cons (car a) result))))
      ((null? a) result)))

(newline)(pp "SRFI names without links: ")
(pp (in-a-not-in-b srfi-names links))

(newline)(pp "links without srfi-names: ")
(pp (in-a-not-in-b links srfi-names))
